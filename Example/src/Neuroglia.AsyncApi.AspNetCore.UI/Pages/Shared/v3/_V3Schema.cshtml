@model V3SchemaViewModel
@inject Neuroglia.Serialization.IJsonSerializer JsonSerializer
@inject Neuroglia.AsyncApi.Generation.IJsonSchemaExampleGenerator ExampleGenerator
@{
    var schemaContext = Model.Context == SchemaContext.Unknown ? string.Empty : EnumHelper.Stringify(Model.Context);
    var schemaFormat = Model.Definition.SchemaFormat?.Split(';', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries)[0] ?? "application/vnd.aai.asyncapi+json";
    switch (schemaFormat)
    {
        case "application/vnd.aai.asyncapi+json":
            var schema = Model.Definition.Schema is JsonSchema jsonSchema ? jsonSchema : JsonSerializer.Deserialize<JsonSchema>(JsonSerializer.SerializeToText(Model.Definition))!;
            var type = schema.GetJsonType()!;
            var properties = schema.GetProperties();
            var examples = Model.Examples;
            <div class="card border-0">
                <a data-bs-toggle="collapse" href="#@(Model.ParentReference)_@(Model.Context)" role="button" aria-expanded="false">
                    <div class="card-header bg-transparent">
                        <i class="caret text-dark"></i>
                        <span class="text-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-html="true" title="@Html.Raw(Markdown.ToHtml(schema.GetDescription() ?? string.Empty))">@schemaContext</span>
                        <span class="badge bg-secondary bg-opacity-10 border border-secondary text-secondary ms-2">@(type == null ? "object" : EnumHelper.Stringify(type.Value).ToLowerInvariant())</span>
                    </div>
                </a>
                @if (type == SchemaValueType.Array || type == SchemaValueType.Object)
                {
                    <div id="@(Model.ParentReference)_@(Model.Context)" class="card-body collapse show">
                        <div class="row">
                            <div class="col-7">
                                <div>
                                    <partial name="v3/_V3JsonSchema" model="new V3JsonSchemaViewModel(this.Model.Document, schema)" />
                                </div>
                            </div>
                            <div class="col-5">
                                <div class="bg-secondary text-light p-3 rounded-1">
                                    @{
                                        var example = examples != null && examples.Any() 
                                            ? Model.Context == SchemaContext.Payload 
                                                ? examples.Last().Payload 
                                                : examples.Last().Headers
                                            : ExampleGenerator.GenerateExample(schema);
                                        var serializationOptions = new System.Text.Json.JsonSerializerOptions();
                                        Neuroglia.Serialization.Json.JsonSerializer.DefaultOptionsConfiguration(serializationOptions);
                                        serializationOptions.WriteIndented = true;
                                        <pre class="m-0">@System.Text.Json.JsonSerializer.Serialize(example, serializationOptions)</pre>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            break;
        default:

            break;
    }
}