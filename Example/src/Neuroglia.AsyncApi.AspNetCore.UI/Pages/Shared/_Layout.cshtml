@inject IAsyncApiDocumentProvider DocumentProvider
@inject Microsoft.Extensions.Options.IOptions<AsyncApiDocumentGenerationOptions> Options;
@{ 
    if (!this.Context.Request.Query.TryGetValue("specVersion", out var documentSpecVersion))
    {
        documentSpecVersion = string.Empty;
    }
    if(!this.Context.Request.Query.TryGetValue("title", out var documentTitle))
    {
        documentTitle = string.Empty;
    }
    if(!this.Context.Request.Query.TryGetValue("version", out var documentVersion))
    {
        documentVersion = string.Empty;
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title - Neuroglia AsyncAPI UI</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <style>
        html, body {
            width: 100%;
            height: 100%;
        }

        html {
            position: relative;
            min-height: 100%;
        }

        a.navbar-brand {
            white-space: normal;
            text-align: center;
            word-break: break-all;
        }

        a.navbar-brand span {
            font-family: 'Cantarell', sans-serif;
            font-size: 26px;
            color: #005eb8;
        }

        a{
            text-decoration: none;
        }

        .footer {
            width: 100%;
            white-space: nowrap;
            /* Set the fixed height of the footer here */
            height: 60px;
            line-height: 60px; /* Vertically center the text there */
            margin: 0px;
            padding: 0px;
        }

        #main {
            min-height: calc(100vh - 80px - 60px); /* 100% - footer - header */
        }

        header {
            height: 80px;
            margin: 0px;
            padding: 0px;
        }

        header .navbar {
            padding-left: 0px;
            padding-right: 0px;
            margin: 0px;
        }

        header .logo{
            height: 50px;
            margin: 5px;
        }

        a[data-bs-toggle="collapse"] i.caret:before {
            display: inline-block;
            font-family: bootstrap-icons !important;
            font-style: normal;
            font-weight: normal !important;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            vertical-align: -.125em;
            content: "\f22c";
        }

        a[data-bs-toggle="collapse"].collapsed i.caret:before {
            content: "\f22c";
            transform: rotate(270deg);
        }

        .w-60-px{
            width: 60px;
        }

        .table td.fit,
        .table th.fit {
            white-space: nowrap;
            width: 1%;
        }

    </style>
</head>
<body>

    <header class="bg-dark border-bottom box-shadow">
        <div class="container">
            <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark text-muted">
                <div class="row container-fluid p-0 m-0">
                    <div class="col-md-8 p-0 m-0">
                        <h3 class="mb-0">AsyncAPI</h3>
                        <span>Powered by Neuroglia</span>
                    </div>
                    <div class="col-md-4 p-0 m-0 text-end">
                        <select class="form-select form-select-sm js-asyncapi-document">
                            @foreach (var document in this.DocumentProvider.OrderBy(d => d.Title).ThenBy(d => d.Version).ThenBy(d => d.AsyncApi))
                            {
                                var selected = document.AsyncApi.Equals(documentSpecVersion, StringComparison.OrdinalIgnoreCase) && document.Title.Equals(documentTitle, StringComparison.OrdinalIgnoreCase) && document.Version.Equals(documentVersion, StringComparison.OrdinalIgnoreCase);
                                <option value="@($"{document.AsyncApi}__{document.Title}__{document.Version}")" selected="@selected">@($"{document.Title} {document.Version} [{document.AsyncApi}]")</option>
                            }
                        </select>
                    </div>
                </div>
            </nav>
        </div>
    </header>

    <div id="main" class="container body-content pt-5 p-3">
        @RenderBody()
    </div>

    <footer class="border-top footer text-muted text-center bg-dark">
        <div class="container">
            <p>Copyright &copy; @(DateTime.UtcNow.Year) Neuroglia SPRL. All rights reserved.</p>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
        $('select.js-asyncapi-document').on('change', function () {
            var $this = $(this);
            const components = $(this).val().split("__");
            const specVersion = components[0];
            const title = components[1];
            const version = components[2];
            const newUrl = new URL(window.location.href);
            newUrl.searchParams.set("specVersion", specVersion);
            newUrl.searchParams.set("title", title);
            newUrl.searchParams.set("version", version);
            window.location = newUrl.href;
        });
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
