asyncapi: 2.6.0
info:
  title: Message Broker Example (RabbitMQ)
  version: 1.0.0
  description: This is an example of a message broker using RabbitMQ.
servers:
  rabbitmq:
    url: amqp://localhost:5672
    protocol: amqp
    description: RabbitMQ server
channels:
  queue1:
    description: 'Queue for queue1. Retry configuration: MaxRetries=3, RetryInterval=5000ms, DeadLetterExchange=dead_letter_exchange, DeadLetterQueue=dead_letter_queue.'
    publish:
      operationId: publishToqueue1
      summary: Publish messages to the queue1 queue
      bindings:
        amqp:
          mandatory: false
          immediate: false
      message:
        headers:
          type: object
          properties:
            correlationId:
              type: string
            description:
              type: string
        payload:
          type: object
          description: Message payload for the queue1 queue
          required:
            - messageId
            - timestamp
          properties:
            messageId:
              type: string
              description: Unique identifier for the message
            timestamp:
              type: string
              format: date-time
              description: Time the message was created
            data:
              type: object
              description: Payload data
        correlationId:
          description: Correlation ID for tracking
          location: $message.header#/correlationId
        contentType: application/json
        name: Message
        title: Message
        examples:
          - name: ExampleMessage
            summary: A minimal valid payload
            payload:
              messageId: '12345'
              timestamp: '2025-05-14T16:11:25.153+00:00'
              data:
                key: value
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: exchange1
          type: direct
          durable: true
          autoDelete: false
  queue2:
    description: 'Queue for queue2. Retry configuration: MaxRetries=3, RetryInterval=5000ms, DeadLetterExchange=dead_letter_exchange, DeadLetterQueue=dead_letter_queue.'
    publish:
      operationId: publishToqueue2
      summary: Publish messages to the queue2 queue
      bindings:
        amqp:
          mandatory: false
          immediate: false
      message:
        headers:
          type: object
          properties:
            correlationId:
              type: string
            description:
              type: string
        payload:
          type: object
          description: Message payload for the queue2 queue
          required:
            - messageId
            - timestamp
          properties:
            messageId:
              type: string
              description: Unique identifier for the message
            timestamp:
              type: string
              format: date-time
              description: Time the message was created
            data:
              type: object
              description: Payload data
        correlationId:
          description: Correlation ID for tracking
          location: $message.header#/correlationId
        contentType: application/json
        name: Message
        title: Message
        examples:
          - name: ExampleMessage
            summary: A minimal valid payload
            payload:
              messageId: '12345'
              timestamp: '2025-05-14T16:11:25.168+00:00'
              data:
                key: value
    bindings:
      amqp:
        is: routingKey
        exchange:
          name: exchange2
          type: direct
          durable: true
          autoDelete: false
components:
  schemas:
    MessagePayload:
      type: object
      properties:
        messageId:
          type: string
        timestamp:
          type: string
          format: date-time
        data:
          type: object
  securitySchemes:
    userPassword:
      type: userPassword
      description: RabbitMQ username and password authentication