@model V2SecuritySchemeDefinitionViewModel
@{
    var scheme = this.Model.Scheme;
    var schemeType = EnumHelper.Stringify(scheme.Type);
    var reference = this.Model.ParentRef;
}
<div>

    @if (!string.IsNullOrWhiteSpace(scheme.Description))
    {
        <p><small class="text-secondary fst-italic">@scheme.Description</small></p>
    }
    <div class="row">
        <div class="col-2">
            <small class="text-secondary">Type</small>
            <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="The security scheme's type. Possible values are: @(string.Join(", ", Enum.GetValues<SecuritySchemeType>().Select(e => EnumHelper.Stringify(e))))"></small>
        </div>
        <div class="col-2"><small class="badge border border-muted text-secondary">@(EnumHelper.Stringify(scheme.Type))</small></div>
    </div>
    @if (scheme.OpenIdConnectUrl != null)
    {
        <div class="row">
            <div class="col-2">
                <small class="text-secondary">OpenID Connect Url</small>
                <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="The OpenId Connect uri to discover OAuth2 configuration values."></small>
            </div>
            <div class="col-2">
                <small class="badge border border-muted text-secondary">@scheme.OpenIdConnectUrl</small>
            </div>
        </div>
    }
    @if (scheme.Scheme != null)
    {
        <div class="row">
            <div class="col-2">
                <small class="text-secondary">Authorization Scheme</small>
                <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235."></small>
            </div>
            <div class="col-2"><small class="badge border border-muted text-secondary">@scheme.Scheme</small></div>
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(scheme.Name))
    {
        <div class="row">
            <div class="col-2">
                <small class="text-secondary">Parameter Name</small>
                <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="The name of the header, query or cookie parameter to be used"></small>
            </div>
            <div class="col-2"><small class="badge border border-muted text-secondary">@scheme.Name</small></div>
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(scheme.In))
    {
        <div class="row">
            <div class="col-2">
                <small class="text-secondary">API Key Location</small>
                <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="The location of the API key."></small>
            </div>
            <div class="col-2"><small class="badge border border-muted text-secondary">@scheme.In</small></div>
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(scheme.BearerFormat))
    {
        <div class="row">
            <div class="col-2">
                <small class="text-secondary">Bearer Format</small>
                <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="An object hint to the client to identify how the bearer token is formatted."></small>
            </div>
            <div class="col-2">
                <small class="badge border border-muted text-secondary">@scheme.BearerFormat</small>
            </div>
        </div>
    }
    @if (scheme.Flows != null && scheme.Flows.AsEnumerable().Any())
    {
        <div class="card my-3 border-0">
            <a data-bs-toggle="collapse" href="#@($"{reference}_flows")" role="button" aria-expanded="false">
                <div class="card-header bg-transparent">
                    <span class="text-secondary fw-bold">Flows</span>
                    <small class="bi bi-info-circle text-secondary ms-1" role="button" data-bs-toggle="tooltip" data-bs-placement="bottom" title="The supported OAUTH flows"></small>
                </div>
            </a>
            <div id="@($"{reference}_flows")" class="card-body m-0 p-0 collapse show">
                @if (scheme.Flows.Implicit != null)
                {
                    <partial name="v2/_V2OAuthFlow" model="@(new V2OAuthFlowDefinitionViewModel(this.Model.Document, reference, "Implicit", scheme.Flows.Implicit))" />
                }
                @if (scheme.Flows.ClientCredentials != null)
                {
                    <partial name="v2/_V2OAuthFlow" model="@(new V2OAuthFlowDefinitionViewModel(this.Model.Document, reference, "Client Credentials", scheme.Flows.ClientCredentials))" />
                }
                @if (scheme.Flows.AuthorizationCode != null)
                {
                    <partial name="v2/_V2OAuthFlow" model="@(new V2OAuthFlowDefinitionViewModel(this.Model.Document, reference, "Authorization Code", scheme.Flows.AuthorizationCode))" />
                }
                @if (scheme.Flows.Password != null)
                {
                    <partial name="v2/_V2OAuthFlow" model="@(new V2OAuthFlowDefinitionViewModel(this.Model.Document, reference, "Password", scheme.Flows.Password))" />
                }
            </div>
        </div>
    }

</div>